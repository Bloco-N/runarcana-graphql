// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  nickname   String
  password   String
  Characters Character[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Character {
  id                      Int                       @id @default(autoincrement())
  userId                  Int
  regionId                Int
  originId                Int
  lineageId               Int
  pastId                  Int
  name                    String
  essence                 String
  expression              String
  exaltation              String
  Region                  Region                    @relation(fields: [regionId], references: [id])
  Origin                  Origin                    @relation(fields: [originId], references: [id])
  User                    User                      @relation(fields: [userId], references: [id])
  Lineage                 Lineage                   @relation(fields: [lineageId], references: [id])
  Past                    Past                      @relation(fields: [pastId], references: [id])
  SpellCharacters         SpellCharacter[]
  CharacterElements       CharacterElement[]
  CharacterMisteries      CharacterMistery[]
  CharacterRunarcanaClass CharacterRunarcanaClass[]
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
  CharacterInheritance    CharacterInheritance[]
}

model Region {
  id                 Int                  @id @default(autoincrement())
  name               String
  Characters         Character[]
  InheritanceRegion  InheritanceRegion[]
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  InheritanceLineage InheritanceLineage[]
}

model Origin {
  id                Int                 @id @default(autoincrement())
  name              String
  Characters        Character[]
  Lineages          Lineage[]
  SpellOrigins      SpellOrigin[]
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  InheritanceOrigin InheritanceOrigin[]
}

model Lineage {
  id            Int            @id @default(autoincrement())
  originId      Int
  name          String
  Origin        Origin         @relation(fields: [originId], references: [id])
  Characters    Character[]
  SpellLineages SpellLineage[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model RunarcanaClass {
  id                      Int                       @id @default(autoincrement())
  name                    String
  SpellClasses            SpellClass[]
  CharacterRunarcanaClass CharacterRunarcanaClass[]
  createdAt               DateTime                  @default(now())
  updatedAt               DateTime                  @updatedAt
}

model Past {
  id         Int         @id @default(autoincrement())
  name       String
  Characters Character[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Spell {
  id              Int              @id @default(autoincrement())
  conjurationId   Int
  durationId      Int
  rangeId         Int
  level           Int
  name            String
  description     String           @db.Text
  materials       String           @db.Text
  Conjuration     Conjuration      @relation(fields: [conjurationId], references: [id])
  Duration        Duration         @relation(fields: [durationId], references: [id])
  Range           Range            @relation(fields: [rangeId], references: [id])
  SpellCharacters SpellCharacter[]
  SpellClasses    SpellClass[]
  SpellComponents SpellComponent[]
  SpellLineages   SpellLineage[]
  SpellMysteries  SpellMystery[]
  SpellOrigins    SpellOrigin[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model Conjuration {
  id        Int      @id @default(autoincrement())
  name      String
  Spells    Spell[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Duration {
  id        Int      @id @default(autoincrement())
  name      String
  Spells    Spell[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Range {
  id        Int      @id @default(autoincrement())
  name      String
  Spells    Spell[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Component {
  id              Int              @id @default(autoincrement())
  name            String
  symbol          String           @db.Char(1)
  SpellComponents SpellComponent[]
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model MagicalSource {
  id          Int       @id @default(autoincrement())
  name        String
  description String    @db.Text
  Misteries   Mystery[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Mystery {
  id                 Int                @id @default(autoincrement())
  magicalSourceId    Int
  name               String
  description        String             @db.Text
  MagicalSource      MagicalSource      @relation(fields: [magicalSourceId], references: [id])
  SpellMysteries     SpellMystery[]
  Elements           Element[]
  CharacterMisteries CharacterMistery[]
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model SpellCharacter {
  spellId     Int
  characterId Int
  Spell       Spell     @relation(fields: [spellId], references: [id], onDelete: Cascade)
  Character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@id([spellId, characterId])
}

model SpellComponent {
  spellId     Int
  componentId Int
  Spell       Spell     @relation(fields: [spellId], references: [id], onDelete: Cascade)
  Component   Component @relation(fields: [componentId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@id([spellId, componentId])
}

model SpellLineage {
  spellId   Int
  lineageId Int
  Spell     Spell    @relation(fields: [spellId], references: [id], onDelete: Cascade)
  Linage    Lineage  @relation(fields: [lineageId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([spellId, lineageId])
}

model SpellClass {
  spellId        Int
  classId        Int
  Spell          Spell          @relation(fields: [spellId], references: [id], onDelete: Cascade)
  RunarcanaClass RunarcanaClass @relation(fields: [classId], references: [id], onDelete: Cascade)
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt

  @@id([spellId, classId])
}

model SpellMystery {
  spellId   Int
  mysteryId Int
  Spell     Spell    @relation(fields: [spellId], references: [id], onDelete: Cascade)
  Mystery   Mystery  @relation(fields: [mysteryId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([spellId, mysteryId])
}

model CharacterMistery {
  characterId Int
  mysteryId   Int
  Character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  Mystery     Mystery   @relation(fields: [mysteryId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@id([characterId, mysteryId])
}

model SpellOrigin {
  spellId   Int
  originId  Int
  Origin    Origin   @relation(fields: [originId], references: [id], onDelete: Cascade)
  Spell     Spell    @relation(fields: [spellId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([spellId, originId])
}

model Element {
  id                 Int                 @id @default(autoincrement())
  mysteryId          Int
  name               String
  description        String              @db.Text
  Mystery            Mystery             @relation(fields: [mysteryId], references: [id])
  ElementRecipes     ElementRecipe[]
  ElementIngredients ElementIngredient[]
  CharacterElements  CharacterElement[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
}

model ElementRecipe {
  id                 Int                 @id @default(autoincrement())
  elementId          Int
  Element            Element             @relation(fields: [elementId], references: [id], onDelete: Cascade)
  ElementIngredients ElementIngredient[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
}

model ElementIngredient {
  elementId       Int
  elementRecipeId Int
  Element         Element       @relation(fields: [elementId], references: [id], onDelete: Cascade)
  ElementRecipe   ElementRecipe @relation(fields: [elementRecipeId], references: [id], onDelete: Cascade)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@id([elementId, elementRecipeId])
}

model CharacterElement {
  elementId   Int
  characterId Int
  Element     Element   @relation(fields: [elementId], references: [id], onDelete: Cascade)
  Character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@id([elementId, characterId])
}

model CharacterRunarcanaClass {
  runarcanaClassId Int
  characterId      Int
  level            Int
  RunarcanaClass   RunarcanaClass @relation(fields: [runarcanaClassId], references: [id], onDelete: Cascade)
  Character        Character      @relation(fields: [characterId], references: [id], onDelete: Cascade)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  @@id([runarcanaClassId, characterId])
}

model Inheritance {
  id                   Int                    @id @default(autoincrement())
  name                 String
  prerequisites        String                 @db.Text
  description          String                 @db.Text
  atributes            String                 @db.Text
  benefits             String                 @db.Text
  rechosen             String
  createdAt            DateTime               @default(now())
  updatedAt            DateTime               @updatedAt
  InheritanceOrigin    InheritanceOrigin[]
  InheritanceRegion    InheritanceRegion[]
  InheritanceLineage   InheritanceLineage[]
  CharacterInheritance CharacterInheritance[]
}

model InheritanceOrigin {
  inheritanceId Int
  originId      Int
  Inheritence   Inheritance @relation(fields: [inheritanceId], references: [id], onDelete: Cascade)
  Origin        Origin      @relation(fields: [originId], references: [id], onDelete: Cascade)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([inheritanceId, originId])
}

model InheritanceRegion {
  inheritanceId Int
  regionId      Int
  Inheritance   Inheritance @relation(fields: [inheritanceId], references: [id])
  Region        Region      @relation(fields: [regionId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([inheritanceId, regionId])
}

model InheritanceLineage {
  Inheritance   Inheritance @relation(fields: [inheritanceId], references: [id])
  Region        Region      @relation(fields: [regionId], references: [id])
  inheritanceId Int
  regionId      Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@id([inheritanceId, regionId])
}

model CharacterInheritance {
  Character     Character   @relation(fields: [characterId], references: [id])
  Inheritance   Inheritance @relation(fields: [inheritanceId], references: [id])
  characterId   Int
  inheritanceId Int

  @@id([characterId, inheritanceId])
}
