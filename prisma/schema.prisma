// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  username   String      @unique
  nickname   String?
  password   String
  characters Character[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Character {
  id         Int      @id @default(autoincrement())
  userId     Int
  regionId   Int
  originId   Int
  linageId   Int
  pastId     Int
  name       String
  essence    String
  expression String
  exaltation String
  Region     Region   @relation(fields: [regionId], references: [id])
  Origin     Origin   @relation(fields: [originId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
  Linage     Linage   @relation(fields: [linageId], references: [id])
  Past       Past     @relation(fields: [pastId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Region {
  id         Int         @id @default(autoincrement())
  name       String
  Characters Character[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Origin {
  id         Int         @id @default(autoincrement())
  name       String
  Characters Character[]
  Linages    Linage[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Linage {
  id         Int         @id @default(autoincrement())
  name       String
  originId   Int
  Origin     Origin      @relation(fields: [originId], references: [id])
  Characters Character[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Past {
  id         Int         @id @default(autoincrement())
  name       String
  Characters Character[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}
